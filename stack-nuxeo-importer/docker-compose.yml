version: "3.5"
services:
  zookeeper:
    image: zookeeper:3.5.5
    container_name: zookeeper
    hostname: zookeeper
    volumes:
      - ./data/zookeeper/data:/datalog
      - ./data/zookeeper/log:/data
  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    container_name: kafka
    hostname: kafka
    environment:
      #KAFKA_BROKER_ID: 1
      KAFKA_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 10
      KAFKA_OFFSETS_RETENTION_MINUTES: 20160
      KAFKA_HEAP_OPTS: "-Xmx256M -Xms256M"
      KAFKA_LOG_DIRS: /kafka/log
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
    depends_on:
      - zookeeper
    volumes:
      - ./data/kafka/data:/kafka:rw
      - ./data/kafka/log:/opt/kafka/log:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro
  mongodb:
    image: mongo:4.0.5
    container_name: mongo
    hostname: mongo
    command: mongod --replSet rs0
    volumes:
      - ./mongo/initRS.js:/docker-entrypoint-initdb.d/initRS.js:ro
      - ./data/mongo/configdb:/data/configdb:rw
      - ./data/mongo/db:/data/db:rw
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.5.3
    container_name: elastic
    hostname: elastic
    labels:
      - "traefik.port=9200"
      - "traefik.frontend.rule=Host:elastic.docker.localhost"
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms384m -Xmx384m
    volumes:
      - esdata:/usr/share/elasticsearch/data:rw
  kafkahq:
    image: tchiotludo/kafkahq
    container_name: kafkahq
    hostname: kafkahq
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:kafkahq.docker.localhost"
    depends_on:
      - kafka
    volumes:
      - ./kafkahq/kafkahq.conf:/app/application.conf:ro
  nuxeo:
    image: packages.nuxeo.com:5000/nuxeo/nuxeo:11.1-SNAPSHOT
    container_name: nuxeo
    hostname: nuxeo
    environment:
      JAVA_OPTS: -Xdebug -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n
    depends_on:
      - kafka
      - elasticsearch
      - mongodb
    labels:
      - "traefik.http.port=8080"
      - "traefik.http.frontend.rule=Host:nuxeo.docker.localhost"
      - "traefik.direct.port=8080"
      - "traefik.direct.frontend.rule=Host:nuxeo-node.docker.localhost"
      - "traefik.backend.healthcheck.path=/nuxeo/runningstatus"
      - "traefik.backend.healthcheck.port=8080"
      - "traefik.backend.healthcheck.interval=10s"
    volumes:
      - ./nuxeo/training-test.zip:/training-test.zip:ro
      - ./nuxeo/nuxeo.conf:/docker-entrypoint-initnuxeo.d/nuxeo.conf:ro
      - ./nuxeo/init-nuxeo.sh:/docker-entrypoint-initnuxeo.d/init-nuxeo.sh:ro
      - ./nuxeo/templates:/templates:ro
      - ./data/nuxeo-binaries:/var/lib/nuxeo/binaries:rw
      - ./data/nuxeo/data:/var/lib/nuxeo/data:rw
      - ./data/nuxeo/packages:/opt/nuxeo/server/packages:rw
  traefik:
    image: traefik:latest
    container_name: traefik
    command: --api --docker
    ports:
      - 80:80
    labels:
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.docker.localhost"
    depends_on:
      - nuxeo
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
volumes:
  esdata:
    driver_opts:
      type: none
      device: /home/ben/dev/tickets/formation-stream-2019/stack-nuxeo-importer/data/elastic
      o: bind
